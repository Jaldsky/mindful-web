services:
  app:
    build:
      context: ..
      dockerfile: ./deploy/docker/service.Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - mindfulweb-net

  init-db:
    build:
      context: ..
      dockerfile: ./deploy/docker/service.Dockerfile
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
    command: [".venv/bin/python", "deploy/scripts/init_db.py"]
    networks:
      - mindfulweb-net

  db:
    image: postgres:16-alpine
    env_file:
      - ../.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: >
        /bin/sh -c 'pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"'
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - mindfulweb-net

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - mindfulweb-net

  worker:
    build:
      context: ..
      dockerfile: ./deploy/docker/service.Dockerfile
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: [".venv/bin/python", "-m", "celery", "--config", "deploy.config.celery_conf", "-A", "app.celery", "worker", "--loglevel=info"]
    restart: unless-stopped
    networks:
      - mindfulweb-net

  beat:
    build:
      context: ..
      dockerfile: ./deploy/docker/service.Dockerfile
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: [".venv/bin/python", "-m", "celery", "--config", "deploy.config.celery_conf", "-A", "app.celery", "beat", "--loglevel=info"]
    restart: unless-stopped
    networks:
      - mindfulweb-net

volumes:
  pgdata:

networks:
  mindfulweb-net:
    driver: bridge
